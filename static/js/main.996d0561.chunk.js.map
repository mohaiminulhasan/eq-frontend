{"version":3,"sources":["components/Radio.jsx","utils/constants.js","pages/Graph.js","pages/DataTable.js","components/layers.js","pages/Map.js","App.js","index.js"],"names":["Radio","id","name","value","state","handler","text","type","checked","onChange","htmlFor","domain","changeDate","x","dateObj","Date","date","toLocaleString","month","getDate","modifyValues","impressions","Math","floor","revenue","modifyLegend","entry","EventsHourlyTooltip","active","payload","label","length","style","backgroundColor","border","padding","className","StatsHourlyTooltip","Graph","useState","category","setCategory","span","setSpan","data","setData","useEffect","a","uri","console","log","h","Headers","append","req","Request","method","headers","mode","fetch","response","json","result","map","fetchData","handleCategoryChange","e","target","handleSpanChange","renderChart","BarChart","width","height","CartesianGrid","strokeDasharray","XAxis","dataKey","xAxisId","YAxis","Tooltip","content","Legend","Bar","fill","ComposedChart","formatter","stroke","barSize","Area","Line","controlStyle","display","flexDirection","borderRadius","justifyContent","margin","ResponsiveContainer","DataTable","search","setSearch","tempArr","setTempArr","fuse","Fuse","keys","rowStyle","rows","forEach","element","push","poi_id","includes","flexBasis","lat","lon","el","refIndex","placeholder","autoFocus","color","fontWeight","clusterLayer","source","filter","paint","clusterCountLayer","layout","unclusteredPointLayer","mapboxgl","workerClass","require","default","Map","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","mapRef","useRef","alignContent","mapStyle","onViewportChange","mapboxApiAccessToken","interactiveLayerIds","onClick","event","feature","features","clusterId","properties","cluster_id","current","getMap","getSource","getClusterExpansionZoom","err","geometry","coordinates","transitionDuration","ref","cluster","clusterMaxZoom","clusterRadius","App","linkStyle","textDecoration","textTransform","textAlign","activeStyle","CustomNavLink","to","lineHeight","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.996d0561.chunk.js","sourcesContent":["export const Radio = ({ id, name, value, state, handler, text }) => {\n    return (\n        <div>\n            <input type=\"radio\" id={id} name={name} value={value} checked={state === value} onChange={handler}/>\n            <label htmlFor={id}>{text}</label><br/>\n        </div>\n    );\n}","export const domain = 'https://demo-flask-app-hasan.herokuapp.com'","import { useEffect, useState } from \"react\";\nimport { Radio } from '../components';\nimport { domain } from '../utils';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, ComposedChart, Area, Line } from 'recharts';\n\nfunction changeDate(x) {\n    let dateObj = new Date(x.date);\n    x.date = `${dateObj.toLocaleString('default', { month: 'short' })} ${dateObj.getDate()}`;\n    return x;\n}\n\nfunction modifyValues(x) {\n    x.impressions = Math.floor(x.impressions / 1000);\n    x.revenue = Math.floor(x.revenue);\n    return x;\n}\n\nfunction modifyLegend(value, entry) {\n    if (value === 'impressions') {\n        return <span>{value} (in thousands)</span>\n    }\n    return <span>{value}</span>\n}\n\nconst EventsHourlyTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div style={{backgroundColor: 'white', border: '2px slateblue solid', padding: '0 20px'}}>\n        <p className=\"label\">Time: {label < 10 && `0`}{`${label}:00`}</p>\n        <p>Events: {payload[0].value}</p>\n        <p>Date: {payload[0]['payload']['date']}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst StatsHourlyTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div style={{backgroundColor: 'white', border: '2px slateblue solid', padding: '0 20px'}}>\n        <p className=\"label\">Time: {label < 10 && `0`}{`${label}:00`}</p>\n        <p>Date: {payload[0]['payload']['date']}</p>\n        <p>Clicks: {payload[0]['payload']['clicks']}</p>\n        <p>Impressions: {payload[0]['payload']['impressions']}</p>\n        <p>Revenue: {payload[0]['payload']['revenue']}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const Graph = () => {\n    const [category, setCategory] = useState('events');\n    const [span, setSpan] = useState('daily');\n    const [data, setData] = useState(null);\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const uri = `${domain}/${category}/${span}`;\n            console.log(uri);\n\n            let h = new Headers();\n            h.append('Content-Type', 'application/json');\n\n            let req = new Request(uri, {\n                method: 'GET',\n                headers: h,\n                mode: 'cors'\n            });\n\n            const response = await fetch(req);\n            const json = await response.json();\n\n            let result = json.map(changeDate);\n\n            if (category === 'stats') {\n                result = result.map(modifyValues);\n            }\n            \n            setData(result);\n\n        }\n        \n        fetchData();\n    }, [category, span])\n\n    const handleCategoryChange = e => {\n        setCategory(e.target.value);\n    }\n\n    const handleSpanChange = e => {\n        setSpan(e.target.value);\n    }\n\n    const renderChart = category === 'events' ? (\n        <BarChart width={730} height={250} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            {span === 'hourly' && <XAxis dataKey=\"hour\" xAxisId={0} />}\n            {span === 'hourly' && <XAxis dataKey=\"date\" xAxisId={1} />}\n            {span === 'daily' && <XAxis dataKey=\"date\" />}\n            <YAxis />\n            {span === 'daily' ? \n                <Tooltip /> :\n                <Tooltip content={<EventsHourlyTooltip/>} />\n            }\n            <Legend />\n            <Bar dataKey=\"events\" fill=\"#8884d8\"/>\n        </BarChart>\n    ) :\n    (\n        <ComposedChart width={730} height={250} data={data}>\n            {console.log(data)}\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            {span === 'daily' ? \n                <Tooltip /> :\n                <Tooltip content={<StatsHourlyTooltip/>} />\n            }\n            <Legend formatter={modifyLegend}/>\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <Bar dataKey=\"clicks\" barSize={20} fill=\"#413ea0\" />\n            <Area type=\"monotone\" dataKey=\"revenue\" fill=\"#8884d8\" stroke=\"#8884d8\" />\n            <Line type=\"monotone\" dataKey=\"impressions\" stroke=\"#ff7300\" />\n        </ComposedChart>\n    );\n\n    const controlStyle = {\n        display: 'flex', flexDirection: 'column', border: '2px darkslateblue solid', borderRadius: 10, padding: '15px 30px'\n    }\n\n    return (\n        <>\n        <div style={{ display: 'flex', justifyContent: 'space-around', margin: '20px 0' }}>\n            <div style={{...controlStyle}}>\n                <Radio id='events' name='category' value='events' state={category} handler={handleCategoryChange} text='Events' />\n                <Radio id='stats' name='category' value='stats' state={category} handler={handleCategoryChange} text='Stats' />\n            </div>\n\n            <div style={{...controlStyle}}>\n                <Radio id='daily' name='span' value='daily' state={span} handler={handleSpanChange} text='Daily' />\n                <Radio id='hourly' name='span' value='hourly' state={span} handler={handleSpanChange} text='Hourly' />\n            </div>\n        </div>\n\n        <ResponsiveContainer width='100%' height={700}>\n            {renderChart}\n        </ResponsiveContainer>\n        </>\n    );\n}","import { useEffect, useState } from \"react\"\nimport { domain } from '../utils'\nimport Fuse from 'fuse.js'\n\nexport const DataTable = () => {\n    const [search, setSearch] = useState('');\n    const [data, setData] = useState([]);\n    const [tempArr, setTempArr] = useState([]);\n    \n    const fuse = new Fuse(data, {\n        keys: ['name']\n    })\n\n    useEffect(() => {\n        async function fetchData() {\n            const uri = `${domain}/poi`;\n            console.log(uri);\n\n            let h = new Headers();\n            h.append('Content-Type', 'application/json');\n\n            let req = new Request(uri, {\n                method: 'GET',\n                headers: h,\n                mode: 'cors'\n            });\n\n            const response = await fetch(req);\n            const json = await response.json();\n\n            \n            setData(json);\n\n        }\n        \n        fetchData();\n    }, [])\n\n    const style = {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '40vw',\n        height: '80vh',\n        justifyContent: 'center'\n    }\n\n    const headerStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: 'darkslateblue',\n        borderRadius: 5,\n        color: 'white',\n        fontWeight: 'bold',\n        justifyContent: 'space-around',\n        padding: 5\n    }\n\n    const rowStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        padding: 5\n    }\n\n    const searchDivStyle = {\n        display: 'flex',\n        flexDirection: 'row-reverse'\n    }\n\n    const handleChange = e => {\n        const result = fuse.search(e.target.value);\n        let tempArr = [];\n        if (result.length !== 0) {\n            result.forEach(el => {\n                tempArr.push(el.refIndex)\n            });\n        } \n\n        setTempArr(tempArr);\n        setSearch(e.target.value);\n    }\n\n    let rows = [];\n    data.forEach(element => {\n        rows.push(\n            <div key={element.poi_id} style={{...rowStyle}}>\n                <div>{element.poi_id}</div>\n                <div style={{ backgroundColor: tempArr.includes(element.poi_id - 1) ? 'yellow' : 'transparent', flexBasis: '40%'}}>{element.name}</div>\n                <div>{element.lat}</div>\n                <div>{element.lon}</div>\n            </div>\n        )\n    });\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <div style={{...style}}>\n                <div style={{...searchDivStyle}}>\n                    <input style={{ margin: 4, padding: 4}} type='text' value={search} onChange={handleChange} placeholder='Search...' autoFocus/>\n                </div>\n                <div style={{...headerStyle}}>\n                    <div>id</div>\n                    <div style={{ flexBasis: '40%'}}>name</div>\n                    <div>latitude</div>\n                    <div>longitude</div>\n                </div>\n                {rows}\n            </div>\n        </div>\n    );\n}","export const clusterLayer = {\n  id: 'clusters',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  paint: {\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40]\n  }\n};\n\nexport const clusterCountLayer = {\n  id: 'cluster-count',\n  type: 'symbol',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  layout: {\n    'text-field': '{point_count_abbreviated}',\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    'text-size': 12\n  }\n};\n\nexport const unclusteredPointLayer = {\n  id: 'unclustered-point',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['!', ['has', 'point_count']],\n  paint: {\n    'circle-color': '#11b4da',\n    'circle-radius': 4,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': '#fff'\n  }\n};\n","import * as React from 'react';\nimport {useState, useRef} from 'react';\nimport mapboxgl from \"mapbox-gl\";\nimport MapGL, {Source, Layer} from 'react-map-gl';\nimport { Radio } from '../components';\nimport { domain } from '../utils'\n\nimport {clusterLayer, clusterCountLayer, unclusteredPointLayer} from '../components/layers';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibWluaWd1bm5yIiwiYSI6ImNrcWdzMGxpMDIwM3AycXM3MWdneDFhY28ifQ.Z1xP1Lr6tDGhuodviJh9lg'; // Set your mapbox token here\n\nexport default function Map() {\n  const [category, setCategory] = useState('events')\n  const [viewport, setViewport] = useState({\n    latitude: 39.7837304,\n    longitude: -100.4458825,\n    width: '80vw',\n    height: '60vh',\n    zoom: 4,\n    bearing: 0,\n    pitch: 50\n  });\n  const mapRef = useRef(null);\n\n  const onClick = event => {\n    const feature = event.features[0];\n    const clusterId = feature.properties.cluster_id;\n\n    const mapboxSource = mapRef.current.getMap().getSource('earthquakes');\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n      if (err) {\n        return;\n      }\n\n      setViewport({\n        ...viewport,\n        longitude: feature.geometry.coordinates[0],\n        latitude: feature.geometry.coordinates[1],\n        zoom,\n        transitionDuration: 500\n      });\n    });\n  };\n\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  }\n\n  const controlStyle = {\n    display: 'flex', flexDirection: 'column', border: '2px darkslateblue solid', borderRadius: 10, padding: '15px 30px'\n  }\n\n  return (\n    <div style={{ display: 'grid', justifyContent: 'center', height: '90vh', alignContent: 'center'}}>\n      <div style={{ display: 'flex', justifyContent: 'space-around', margin: '20px 0' }}>\n        <div style={{...controlStyle}}>\n            <Radio id='events' name='category' value='events' state={category} handler={handleCategoryChange} text='Events' />\n            <Radio id='stats' name='category' value='stats' state={category} handler={handleCategoryChange} text='Stats' />\n        </div>\n      </div>\n\n      <MapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        interactiveLayerIds={[clusterLayer.id]}\n        onClick={onClick}\n        ref={mapRef}\n      >\n        <Source\n          id=\"earthquakes\"\n          type=\"geojson\"\n          data={`${domain}/${category}/geo`}\n          cluster={true}\n          clusterMaxZoom={14}\n          clusterRadius={50}\n        >\n          <Layer {...clusterLayer} />\n          <Layer {...clusterCountLayer} />\n          <Layer {...unclusteredPointLayer} />\n        </Source>\n      </MapGL>\n    </div>\n  );\n}\n","import './App.css';\nimport { Graph, DataTable } from './pages';\nimport Map from './pages/Map';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\n\nfunction App() {\n  const navStyle = {\n    display: 'flex',\n    justifyContent: 'space-around',\n    height: 50,\n    lineHeight: '50px'\n  }\n\n  const linkStyle = {\n    textDecoration: 'none',\n    color: 'black',\n    textTransform: 'uppercase',\n    width: '20vh',\n    textAlign: 'center'\n  }\n\n  const activeStyle = {\n    backgroundColor: 'black',\n    color: 'white'\n  }\n  \n  const CustomNavLink = (to, text) => {\n    return <NavLink style={{...linkStyle}} activeStyle={{...activeStyle}} to={`${to}`}>{text}</NavLink>\n  }\n\n  return (\n    <div>\n      <nav style={{...navStyle}}>\n        {/* {CustomNavLink('', 'Home')} */}\n        <NavLink style={{...linkStyle}} activeStyle={{...activeStyle}} exact to='/'>Graph</NavLink>\n        {CustomNavLink('/data-table', 'Data Table')}\n        {CustomNavLink('/map', 'Map')}\n      </nav>\n\n      <Switch>\n          <Route exact path=\"/\">\n            <Graph/>\n          </Route>\n          <Route path='/data-table'>\n            <DataTable/>\n          </Route>\n          <Route path='/map'>\n            <Map/>\n          </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}